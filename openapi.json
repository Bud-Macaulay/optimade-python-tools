{
  "openapi": "3.0.2",
  "info": {
    "title": "OPTiMaDe API",
    "version": "0.10.0",
    "description": "The [Open Databases Integration for Materials Design (OPTiMaDe) consortium](http://http://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API."
  },
  "paths": {
    "/structures": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_Structures",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EntryResponseMany"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Structure"
        ],
        "summary": "Get Structures",
        "operationId": "get_structures_structures_get",
        "parameters": [
          {
            "description": "See [the full and latest OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.rst) for filter query syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n",
            "required": false,
            "schema": {
              "title": "Filter",
              "type": "string",
              "description": "See [the full and latest OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.rst) for filter query syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "json"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort",
              "type": "string"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "page_limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Page",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Cursor",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_cursor",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Above",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_above",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Below",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_below",
            "in": "query"
          }
        ]
      }
    },
    "/structures/{entry_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_Single_Structure",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EntryResponseOne"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Structure"
        ],
        "summary": "Get Single Structure",
        "operationId": "get_single_structure_structures__entry_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Entry_Id",
              "type": "string"
            },
            "name": "entry_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "json"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          }
        ]
      }
    },
    "/references": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_References",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EntryResponseMany"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Reference"
        ],
        "summary": "Get References",
        "operationId": "get_references_references_get",
        "parameters": [
          {
            "description": "See [the full and latest OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.rst) for filter query syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n",
            "required": false,
            "schema": {
              "title": "Filter",
              "type": "string",
              "description": "See [the full and latest OPTiMaDe spec](https://github.com/Materials-Consortia/OPTiMaDe/blob/develop/optimade.rst) for filter query syntax.\n\nExample: `chemical_formula = \"Al\" OR (prototype_formula = \"AB\" AND elements HAS Si, Al, O)`.\n"
            },
            "name": "filter",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "json"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sort",
              "type": "string"
            },
            "name": "sort",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "page_limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Page",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Cursor",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_cursor",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Above",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_above",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page_Below",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "page_below",
            "in": "query"
          }
        ]
      }
    },
    "/references/{entry_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_Single_Reference",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EntryResponseOne"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Reference"
        ],
        "summary": "Get Single Reference",
        "operationId": "get_single_reference_references__entry_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Entry_Id",
              "type": "string"
            },
            "name": "entry_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Format",
              "type": "string",
              "default": "json"
            },
            "name": "response_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Email_Address",
              "type": "string",
              "format": "email"
            },
            "name": "email_address",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Response_Fields",
              "type": "string"
            },
            "name": "response_fields",
            "in": "query"
          }
        ]
      }
    },
    "/info": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_Info",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/InfoResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Info"
        ],
        "summary": "Get Info",
        "operationId": "get_info_info_get"
      }
    },
    "/info/{entry}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response_Get_Entry_Info",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EntryInfoResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Info",
          "Structure",
          "Reference"
        ],
        "summary": "Get Entry Info",
        "operationId": "get_entry_info_info__entry__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Entry",
              "type": "string"
            },
            "name": "entry",
            "in": "path"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Implementation": {
        "title": "Implementation",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "name of the implementation"
          },
          "version": {
            "title": "Version",
            "type": "string",
            "description": "version string of the current implementation"
          },
          "source_url": {
            "title": "Source_Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "URL of the implementation source, either downloadable archive or version control system",
            "format": "uri"
          },
          "maintainer": {
            "title": "ImplementationMaintainer",
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "title": "Email",
                "description": "the maintainer's email address",
                "type": "string",
                "format": "email"
              }
            },
            "description": "Details about the maintainer of the implementation"
          }
        },
        "description": "Information on the server implementation"
      },
      "Link": {
        "title": "Link",
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "href": {
            "title": "Href",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "a string containing the link\u2019s URL.",
            "format": "uri"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          }
        },
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object."
      },
      "ImplementationMaintainer": {
        "title": "ImplementationMaintainer",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "description": "the maintainer's email address",
            "format": "email"
          }
        },
        "description": "Details about the maintainer of the implementation"
      },
      "EntryResource": {
        "title": "EntryResource",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "An entry's ID as defined in section `Definition of Terms`_.\n- **Type**: string.\n- **Requirements/Conventions**:\n\n  - **Response**: REQUIRED in the response unless explicitly excluded.\n  - **Query**: MUST be a queryable property with support for all mandatory filter operators.\n  - See section `Definition of Terms`_.\n\n- **Examples**:\n\n  - :val:`\"db/1234567\"`\n  - :val:`\"cod/2000000\"`\n  - :val:`\"cod/2000000@1234567\"`\n  - :val:`\"nomad/L1234567890\"`\n  - :val:`\"42\"`"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "The name of the type of an entry.\nAny entry MUST be able to be fetched using the `base URL <Base URL_>`_ type and ID at the url :endpoint:`<base URL>/<type>/<id>`.\n- **Type**: string.\n- **Requirements/Conventions**:\n\n  - **Response**: REQUIRED in the response unless explicitly excluded.\n  - **Query**: Support for queries on this property is OPTIONAL.\n    If supported, only a subset of string comparison operators MAY be supported.\n\n- **Requirements/Conventions**: MUST be an existing entry type.\n- **Example**: :val:`\"structures\"`"
          },
          "links": {
            "title": "ResourceLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link that identifies the resource represented by the resource object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Resource Links object"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          },
          "attributes": {
            "title": "EntryResourceAttributes",
            "required": [
              "last_modified"
            ],
            "type": "object",
            "properties": {
              "immutable_id": {
                "title": "Immutable_Id",
                "description": "The entry's immutable ID (e.g., an UUID).\nThis is important for databases having preferred IDs that point to \"the latest version\" of a record, but still offer access to older variants.\nThis ID maps to the version-specific record, in case it changes in the future.\n- **Type**: string.\n- **Requirements/Conventions**:\n\n  - **Response**: OPTIONAL in the response.\n  - **Query**: If present, MUST be a queryable property with support for all mandatory filter operators.\n\n- **Examples**:\n\n  - :val:`\"8bd3e750-b477-41a0-9b11-3a799f21b44f\"` \n  - :val:`\"fjeiwoj,54;@=%<>#32\"` (Strings that are not URL-safe are allowed.)",
                "type": "string"
              },
              "last_modified": {
                "title": "Last_Modified",
                "description": "Date and time representing when the entry was last modified.\n- **Type**: timestamp.\n- **Requirements/Conventions**:\n\n  - **Response**: REQUIRED in the response unless explicitly excluded.\n  - **Query**: MUST be a queryable property with support for all mandatory filter operators.\n\n- **Example**:\n\n  - As part of JSON response format: :VAL:`\"2007-04-05T14:30Z\"`\n    (i.e., encoded as an `RFC 3339 Internet Date/Time Format <https://tools.ietf.org/html/rfc3339#section-5.6>`__ string.)",
                "type": "string",
                "format": "date-time"
              }
            },
            "description": "Contains key-value pairs representing the entry's properties."
          },
          "relationships": {
            "title": "Relationships",
            "type": "object",
            "properties": {},
            "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.\nKeys MUST NOT be:\n    type\n    id"
          }
        }
      },
      "Warnings": {
        "title": "Warnings",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": {
            "title": "ErrorLinks",
            "type": "object",
            "properties": {
              "about": {
                "title": "About",
                "description": "A link that leads to further details about this particular occurrence of the problem.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Links object specific to Error objects"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "the HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "title": "Code",
            "type": "string",
            "description": "an application-specific error code, expressed as a string value."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "title": "ErrorSource",
            "type": "object",
            "properties": {
              "pointer": {
                "title": "Pointer",
                "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              },
              "parameter": {
                "title": "Parameter",
                "description": "a string indicating which URI query parameter caused the error.",
                "type": "string"
              }
            },
            "description": "an object containing references to the source of the error"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Warnings must be of type \"warning\""
          }
        },
        "description": "OPTiMaDe-specific warning class based on OPTiMaDe-specific JSON API Error.\n    From the specification:\n\n        A warning resource object is defined similarly to a JSON API\n        error object, but MUST also include the field type, which MUST\n        have the value \"warning\". The field detail MUST be present and\n        SHOULD contain a non-critical message, e.g., reporting\n        unrecognized search attributes or deprecated features.\n\n    Note: Must be named \"Warnings\", since \"Warning\" is a built-in Python class."
      },
      "ResponseMeta": {
        "title": "ResponseMeta",
        "required": [
          "query",
          "api_version",
          "time_stamp",
          "data_returned",
          "more_data_available",
          "provider"
        ],
        "type": "object",
        "properties": {
          "query": {
            "title": "ResponseMetaQuery",
            "required": [
              "representation"
            ],
            "type": "object",
            "properties": {
              "representation": {
                "title": "Representation",
                "description": "a string with the part of the URL that follows the base URL.",
                "type": "string"
              }
            },
            "description": "Information on the query that was requested."
          },
          "api_version": {
            "title": "Api_Version",
            "type": "string",
            "description": "a string containing the version of the API implementation, e.g. v0.9.5"
          },
          "time_stamp": {
            "title": "Time_Stamp",
            "type": "string",
            "description": "a string containing the date and time at which the query was exexcuted",
            "format": "date-time"
          },
          "data_returned": {
            "title": "Data_Returned",
            "minimum": 0.0,
            "type": "integer",
            "description": "an integer containing the number of data objects returned for the query."
          },
          "more_data_available": {
            "title": "More_Data_Available",
            "type": "boolean",
            "description": "`false` if all data has been returned, and `true` if not."
          },
          "provider": {
            "title": "Provider",
            "required": [
              "name",
              "description",
              "prefix"
            ],
            "type": "object",
            "properties": {
              "name": {
                "title": "Name",
                "description": "a short name for the database provider",
                "type": "string"
              },
              "description": {
                "title": "Description",
                "description": "a longer description of the database provider",
                "type": "string"
              },
              "prefix": {
                "title": "Prefix",
                "description": "database-provider-specific prefix as found in Appendix 1.",
                "type": "string"
              },
              "homepage": {
                "title": "Homepage",
                "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "index_base_url": {
                "title": "Index_Base_Url",
                "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to the base URL for the `index` meta-database as specified in Appendix 1, either directly as a string, or as a link object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "Information on the database provider of the implementation."
          },
          "data_available": {
            "title": "Data_Available",
            "type": "integer",
            "description": "an integer containing the total number of data objects available in the database"
          },
          "last_id": {
            "title": "Last_Id",
            "type": "string",
            "description": "a string containing the last ID returned"
          },
          "response_message": {
            "title": "Response_Message",
            "type": "string",
            "description": "response string from the server"
          },
          "implementation": {
            "title": "Implementation",
            "type": "object",
            "properties": {
              "name": {
                "title": "Name",
                "description": "name of the implementation",
                "type": "string"
              },
              "version": {
                "title": "Version",
                "description": "version string of the current implementation",
                "type": "string"
              },
              "source_url": {
                "title": "Source_Url",
                "description": "URL of the implementation source, either downloadable archive or version control system",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "maintainer": {
                "title": "ImplementationMaintainer",
                "description": "Details about the maintainer of the implementation",
                "type": "object",
                "properties": {
                  "email": {
                    "title": "Email",
                    "description": "the maintainer's email address",
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "description": "Information on the server implementation"
          },
          "warnings": {
            "title": "Warnings",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warnings"
            },
            "description": "List of warning resource objects representing non-critical errors or warnings. A warning resource object is defined similarly to a JSON API error object, but MUST also include the field type, which MUST have the value \"warning\". The field detail MUST be present and SHOULD contain a non-critical message, e.g., reporting unrecognized search attributes or deprecated features. The field status, representing a HTTP response status code, MUST NOT be present for a warning resource object. This is an exclusive field for error resource objects."
          }
        },
        "description": "A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)\nthat contains JSON API meta objects of non-standard\nmeta-information.\n\nOPTIONAL additional information global to the query that is not\nspecified in this document, MUST start with a\ndatabase-provider-specific prefix."
      },
      "optimade__models__jsonapi__Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": {
            "title": "ErrorLinks",
            "type": "object",
            "properties": {
              "about": {
                "title": "About",
                "description": "A link that leads to further details about this particular occurrence of the problem.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Links object specific to Error objects"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "the HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "title": "Code",
            "type": "string",
            "description": "an application-specific error code, expressed as a string value."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "title": "ErrorSource",
            "type": "object",
            "properties": {
              "pointer": {
                "title": "Pointer",
                "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              },
              "parameter": {
                "title": "Parameter",
                "description": "a string indicating which URI query parameter caused the error.",
                "type": "string"
              }
            },
            "description": "an object containing references to the source of the error"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          }
        },
        "description": "An error response"
      },
      "Resource": {
        "title": "Resource",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Resource ID"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Resource type"
          },
          "links": {
            "title": "ResourceLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link that identifies the resource represented by the resource object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Resource Links object"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          },
          "attributes": {
            "title": "Attributes",
            "type": "object",
            "properties": {},
            "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.\nThe keys for Attributes must NOT be:\n    relationships\n    links\n    id\n    type"
          },
          "relationships": {
            "title": "Relationships",
            "type": "object",
            "properties": {},
            "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.\nKeys MUST NOT be:\n    type\n    id"
          }
        },
        "description": "Resource objects appear in a JSON:API document to represent resources."
      },
      "EntryResponseOne": {
        "title": "EntryResponseOne",
        "required": [
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "$ref": "#/components/schemas/EntryResource"
              },
              {
                "type": "object"
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "errors": {
            "title": "Errors",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/optimade__models__jsonapi__Error"
            },
            "description": "A list of errors"
          },
          "included": {
            "title": "Included",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "A list of resources that are included"
          },
          "links": {
            "title": "ToplevelLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link to itself",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "related": {
                "title": "Related",
                "description": "A related resource link",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "first": {
                "title": "First",
                "description": "The first page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "last": {
                "title": "Last",
                "description": "The last page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "title": "Prev",
                "description": "The previous page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "next": {
                "title": "Next",
                "description": "The next page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              }
            },
            "description": "A set of Links objects, possibly including pagination"
          },
          "jsonapi": {
            "title": "JsonApi",
            "required": [
              "version"
            ],
            "type": "object",
            "properties": {
              "version": {
                "title": "Version",
                "description": "Version of the json API used",
                "type": "string"
              },
              "meta": {
                "title": "Meta",
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "properties": {}
              }
            },
            "description": "An object describing the server's implementation"
          }
        }
      },
      "EntryResourceAttributes": {
        "title": "EntryResourceAttributes",
        "required": [
          "last_modified"
        ],
        "type": "object",
        "properties": {
          "immutable_id": {
            "title": "Immutable_Id",
            "type": "string",
            "description": "The entry's immutable ID (e.g., an UUID).\nThis is important for databases having preferred IDs that point to \"the latest version\" of a record, but still offer access to older variants.\nThis ID maps to the version-specific record, in case it changes in the future.\n- **Type**: string.\n- **Requirements/Conventions**:\n\n  - **Response**: OPTIONAL in the response.\n  - **Query**: If present, MUST be a queryable property with support for all mandatory filter operators.\n\n- **Examples**:\n\n  - :val:`\"8bd3e750-b477-41a0-9b11-3a799f21b44f\"` \n  - :val:`\"fjeiwoj,54;@=%<>#32\"` (Strings that are not URL-safe are allowed.)"
          },
          "last_modified": {
            "title": "Last_Modified",
            "type": "string",
            "description": "Date and time representing when the entry was last modified.\n- **Type**: timestamp.\n- **Requirements/Conventions**:\n\n  - **Response**: REQUIRED in the response unless explicitly excluded.\n  - **Query**: MUST be a queryable property with support for all mandatory filter operators.\n\n- **Example**:\n\n  - As part of JSON response format: :VAL:`\"2007-04-05T14:30Z\"`\n    (i.e., encoded as an `RFC 3339 Internet Date/Time Format <https://tools.ietf.org/html/rfc3339#section-5.6>`__ string.)",
            "format": "date-time"
          }
        },
        "description": "Contains key-value pairs representing the entry's properties."
      },
      "Provider": {
        "title": "Provider",
        "required": [
          "name",
          "description",
          "prefix"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "a short name for the database provider"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "a longer description of the database provider"
          },
          "prefix": {
            "title": "Prefix",
            "type": "string",
            "description": "database-provider-specific prefix as found in Appendix 1."
          },
          "homepage": {
            "title": "Homepage",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object."
          },
          "index_base_url": {
            "title": "Index_Base_Url",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to the base URL for the `index` meta-database as specified in Appendix 1, either directly as a string, or as a link object."
          }
        },
        "description": "Information on the database provider of the implementation."
      },
      "optimade__models__optimade_json__Error": {
        "title": "Error",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": {
            "title": "ErrorLinks",
            "type": "object",
            "properties": {
              "about": {
                "title": "About",
                "description": "A link that leads to further details about this particular occurrence of the problem.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Links object specific to Error objects"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "the HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "title": "Code",
            "type": "string",
            "description": "an application-specific error code, expressed as a string value."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "title": "ErrorSource",
            "type": "object",
            "properties": {
              "pointer": {
                "title": "Pointer",
                "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              },
              "parameter": {
                "title": "Parameter",
                "description": "a string indicating which URI query parameter caused the error.",
                "type": "string"
              }
            },
            "description": "an object containing references to the source of the error"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          }
        },
        "description": "detail MUST be present"
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "title": "Resource",
                "description": "Resource objects appear in a JSON:API document to represent resources.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Id",
                    "description": "Resource ID",
                    "type": "string"
                  },
                  "type": {
                    "title": "Type",
                    "description": "Resource type",
                    "type": "string"
                  },
                  "links": {
                    "title": "ResourceLinks",
                    "description": "A Resource Links object",
                    "type": "object",
                    "properties": {
                      "self": {
                        "title": "Self",
                        "description": "A link that identifies the resource represented by the resource object.",
                        "anyOf": [
                          {
                            "minLength": 1,
                            "maxLength": 65536,
                            "type": "string",
                            "format": "uri"
                          },
                          {
                            "title": "Link",
                            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                            "type": "object",
                            "properties": {
                              "href": {
                                "title": "Href",
                                "description": "a string containing the link\u2019s URL.",
                                "minLength": 1,
                                "maxLength": 65536,
                                "type": "string",
                                "format": "uri"
                              },
                              "meta": {
                                "title": "Meta",
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "required": [
                              "href"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  },
                  "attributes": {
                    "title": "Attributes",
                    "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.\nThe keys for Attributes must NOT be:\n    relationships\n    links\n    id\n    type",
                    "type": "object",
                    "properties": {}
                  },
                  "relationships": {
                    "title": "Relationships",
                    "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.\nKeys MUST NOT be:\n    type\n    id",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              },
              {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            ],
            "description": "Outputted Data"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "errors": {
            "title": "Errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/optimade__models__optimade_json__Error"
            }
          },
          "included": {
            "title": "Included",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "A list of resources that are included"
          },
          "links": {
            "title": "ToplevelLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link to itself",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "related": {
                "title": "Related",
                "description": "A related resource link",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "first": {
                "title": "First",
                "description": "The first page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "last": {
                "title": "Last",
                "description": "The last page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "title": "Prev",
                "description": "The previous page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "next": {
                "title": "Next",
                "description": "The next page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              }
            },
            "description": "A set of Links objects, possibly including pagination"
          },
          "jsonapi": {
            "title": "JsonApi",
            "required": [
              "version"
            ],
            "type": "object",
            "properties": {
              "version": {
                "title": "Version",
                "description": "Version of the json API used",
                "type": "string"
              },
              "meta": {
                "title": "Meta",
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "properties": {}
              }
            },
            "description": "An object describing the server's implementation"
          }
        }
      },
      "EntryInfoProperty": {
        "title": "EntryInfoProperty",
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "description": "description of the entry"
          },
          "unit": {
            "title": "Unit",
            "type": "string",
            "description": "the physical unit of the entry"
          }
        }
      },
      "Meta": {
        "title": "Meta",
        "type": "object",
        "properties": {},
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
      },
      "JsonApi": {
        "title": "JsonApi",
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "title": "Version",
            "type": "string",
            "description": "Version of the json API used"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          }
        },
        "description": "An object describing the server's implementation"
      },
      "ResponseMetaQuery": {
        "title": "ResponseMetaQuery",
        "required": [
          "representation"
        ],
        "type": "object",
        "properties": {
          "representation": {
            "title": "Representation",
            "type": "string",
            "description": "a string with the part of the URL that follows the base URL."
          }
        },
        "description": "Information on the query that was requested."
      },
      "AvailableApiVersion": {
        "title": "AvailableApiVersion",
        "required": [
          "url",
          "version"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "a string specifying a base URL that MUST adhere to the rules in section Base URL",
            "format": "uri"
          },
          "version": {
            "title": "Version",
            "type": "string",
            "description": "a string containing the full version number of the API served at that base URL. The version number string MUST NOT be prefixed by, e.g., 'v'."
          }
        },
        "description": "A JSON object containing information about an available API version"
      },
      "BaseInfoAttributes": {
        "title": "BaseInfoAttributes",
        "required": [
          "available_api_versions"
        ],
        "type": "object",
        "properties": {
          "api_version": {
            "title": "Api_Version",
            "type": "string",
            "description": "Presently used version of the OPTiMaDe API",
            "default": "v0.10"
          },
          "available_api_versions": {
            "title": "Available_Api_Versions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableApiVersion"
            },
            "description": "A list of dictionaries of available API versions at other base URLs"
          },
          "formats": {
            "title": "Formats",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of available output formats.",
            "default": [
              "json"
            ]
          },
          "available_endpoints": {
            "title": "Available_Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of available endpoints (i.e., the string to be appended to the base URL).",
            "default": [
              "structures",
              "info"
            ]
          },
          "entry_types_by_format": {
            "title": "Entry_Types_By_Format",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Available entry endpoints as a function of output formats.",
            "default": {
              "json": [
                "structures"
              ]
            }
          },
          "is_index": {
            "title": "Is_Index",
            "type": "boolean",
            "description": "If true, this is an index meta-database base URL (see section Index Meta-Database). If this member is not provided, the client MUST assume this is not an index meta-database base URL (i.e., the default is for is_index to be false).",
            "default": false
          }
        },
        "description": "Attributes for Base URL Info endpoint"
      },
      "EntryResponseMany": {
        "title": "EntryResponseMany",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntryResource"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "errors": {
            "title": "Errors",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/optimade__models__jsonapi__Error"
            },
            "description": "A list of errors"
          },
          "included": {
            "title": "Included",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "A list of resources that are included"
          },
          "links": {
            "title": "ToplevelLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link to itself",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "related": {
                "title": "Related",
                "description": "A related resource link",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "first": {
                "title": "First",
                "description": "The first page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "last": {
                "title": "Last",
                "description": "The last page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "title": "Prev",
                "description": "The previous page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "next": {
                "title": "Next",
                "description": "The next page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              }
            },
            "description": "A set of Links objects, possibly including pagination"
          },
          "jsonapi": {
            "title": "JsonApi",
            "required": [
              "version"
            ],
            "type": "object",
            "properties": {
              "version": {
                "title": "Version",
                "description": "Version of the json API used",
                "type": "string"
              },
              "meta": {
                "title": "Meta",
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "properties": {}
              }
            },
            "description": "An object describing the server's implementation"
          }
        }
      },
      "ToplevelLinks": {
        "title": "ToplevelLinks",
        "type": "object",
        "properties": {
          "self": {
            "title": "Self",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "A link to itself"
          },
          "related": {
            "title": "Related",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "A related resource link"
          },
          "first": {
            "title": "First",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "The first page of data",
            "format": "uri"
          },
          "last": {
            "title": "Last",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "The last page of data",
            "format": "uri"
          },
          "prev": {
            "title": "Prev",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "The previous page of data",
            "format": "uri"
          },
          "next": {
            "title": "Next",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "The next page of data",
            "format": "uri"
          }
        },
        "description": "A set of Links objects, possibly including pagination"
      },
      "EntryInfoResource": {
        "title": "EntryInfoResource",
        "required": [
          "formats",
          "description",
          "properties",
          "output_fields_by_format"
        ],
        "type": "object",
        "properties": {
          "formats": {
            "title": "Formats",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of available output formats."
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "description of the entry"
          },
          "properties": {
            "title": "Properties",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EntryInfoProperty"
            },
            "description": "a dictionary describing queryable properties for this entry type, where each key is a property ID."
          },
          "output_fields_by_format": {
            "title": "Output_Fields_By_Format",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "a dictionary of available output fields for this entry type, where the keys are the values of the `formats` list and the values are the keys of the `properties` dictionary."
          }
        }
      },
      "EntryInfoResponse": {
        "title": "EntryInfoResponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntryInfoResource"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "errors": {
            "title": "Errors",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/optimade__models__jsonapi__Error"
            },
            "description": "A list of errors"
          },
          "included": {
            "title": "Included",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "A list of resources that are included"
          },
          "links": {
            "title": "ToplevelLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link to itself",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "related": {
                "title": "Related",
                "description": "A related resource link",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "first": {
                "title": "First",
                "description": "The first page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "last": {
                "title": "Last",
                "description": "The last page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "title": "Prev",
                "description": "The previous page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "next": {
                "title": "Next",
                "description": "The next page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              }
            },
            "description": "A set of Links objects, possibly including pagination"
          },
          "jsonapi": {
            "title": "JsonApi",
            "required": [
              "version"
            ],
            "type": "object",
            "properties": {
              "version": {
                "title": "Version",
                "description": "Version of the json API used",
                "type": "string"
              },
              "meta": {
                "title": "Meta",
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "properties": {}
              }
            },
            "description": "An object describing the server's implementation"
          }
        }
      },
      "Relationships": {
        "title": "Relationships",
        "type": "object",
        "properties": {},
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.\nKeys MUST NOT be:\n    type\n    id"
      },
      "BaseInfoResource": {
        "title": "BaseInfoResource",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "links": {
            "title": "ResourceLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link that identifies the resource represented by the resource object.",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              }
            },
            "description": "A Resource Links object"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "properties": {},
            "description": "Non-standard meta-information that can not be represented as an attribute or relationship."
          },
          "attributes": {
            "$ref": "#/components/schemas/BaseInfoAttributes"
          },
          "relationships": {
            "title": "Relationships",
            "type": "object",
            "properties": {},
            "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.\nKeys MUST NOT be:\n    type\n    id"
          }
        }
      },
      "InfoResponse": {
        "title": "InfoResponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BaseInfoResource"
          },
          "meta": {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          "errors": {
            "title": "Errors",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/optimade__models__jsonapi__Error"
            },
            "description": "A list of errors"
          },
          "included": {
            "title": "Included",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "A list of resources that are included"
          },
          "links": {
            "title": "ToplevelLinks",
            "type": "object",
            "properties": {
              "self": {
                "title": "Self",
                "description": "A link to itself",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "related": {
                "title": "Related",
                "description": "A related resource link",
                "anyOf": [
                  {
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "title": "Link",
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                    "type": "object",
                    "properties": {
                      "href": {
                        "title": "Href",
                        "description": "a string containing the link\u2019s URL.",
                        "minLength": 1,
                        "maxLength": 65536,
                        "type": "string",
                        "format": "uri"
                      },
                      "meta": {
                        "title": "Meta",
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "required": [
                      "href"
                    ]
                  }
                ]
              },
              "first": {
                "title": "First",
                "description": "The first page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "last": {
                "title": "Last",
                "description": "The last page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "title": "Prev",
                "description": "The previous page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              "next": {
                "title": "Next",
                "description": "The next page of data",
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              }
            },
            "description": "A set of Links objects, possibly including pagination"
          },
          "jsonapi": {
            "title": "JsonApi",
            "required": [
              "version"
            ],
            "type": "object",
            "properties": {
              "version": {
                "title": "Version",
                "description": "Version of the json API used",
                "type": "string"
              },
              "meta": {
                "title": "Meta",
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "properties": {}
              }
            },
            "description": "An object describing the server's implementation"
          }
        }
      },
      "ErrorLinks": {
        "title": "ErrorLinks",
        "type": "object",
        "properties": {
          "about": {
            "title": "About",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "A link that leads to further details about this particular occurrence of the problem."
          }
        },
        "description": "A Links object specific to Error objects"
      },
      "Attributes": {
        "title": "Attributes",
        "type": "object",
        "properties": {},
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.\nThe keys for Attributes must NOT be:\n    relationships\n    links\n    id\n    type"
      },
      "ResourceLinks": {
        "title": "ResourceLinks",
        "type": "object",
        "properties": {
          "self": {
            "title": "Self",
            "anyOf": [
              {
                "minLength": 1,
                "maxLength": 65536,
                "type": "string",
                "format": "uri"
              },
              {
                "title": "Link",
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                "type": "object",
                "properties": {
                  "href": {
                    "title": "Href",
                    "description": "a string containing the link\u2019s URL.",
                    "minLength": 1,
                    "maxLength": 65536,
                    "type": "string",
                    "format": "uri"
                  },
                  "meta": {
                    "title": "Meta",
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "href"
                ]
              }
            ],
            "description": "A link that identifies the resource represented by the resource object."
          }
        },
        "description": "A Resource Links object"
      },
      "ErrorSource": {
        "title": "ErrorSource",
        "type": "object",
        "properties": {
          "pointer": {
            "title": "Pointer",
            "type": "string",
            "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
          },
          "parameter": {
            "title": "Parameter",
            "type": "string",
            "description": "a string indicating which URI query parameter caused the error."
          }
        },
        "description": "an object containing references to the source of the error"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      }
    }
  }
}